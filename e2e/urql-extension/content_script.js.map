{"version":3,"sources":["urql-devtools:///webpack/bootstrap","urql-devtools:///./src/extension/content_script.ts","urql-devtools:///./src/util/EventTarget.ts","urql-devtools:///./src/util/debug.ts","urql-devtools:///./src/types/connections.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","connection","window","addEventListener","data","isTrusted","source","message","debug","type","chrome","runtime","connect","ContentScriptConnectionName","onMessage","addListener","handleMessage","onDisconnect","handleDisconnect","undefined","console","warn","postMessage","location","origin","BackgroundEventTarget","callback","this","listeners","removeEventListener","dispatchEvent","event","targets","values","forEach","f","connectedSources","keys","DevtoolsPanelConnectionName"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,K,mCCjFrD,2BAIA,IAAIC,EAGJC,OAAOC,iBAAiB,WAAW,EAAGC,OAAMC,gBAI1C,IAAKA,GAHkC,cAGrBD,aAAA,EAAAA,EAAME,QACtB,OAGF,MAAMC,EAAUH,EAUhB,GATAI,YAAM,qBAAsBJ,GAGP,oBAAjBG,EAAQE,OACVR,EAAaS,OAAOC,QAAQC,QAAQ,CAAEpC,KAAMqC,MAC5CZ,EAAWa,UAAUC,YAAYC,GACjCf,EAAWgB,aAAaF,YAAYG,SAGnBC,IAAflB,EACF,OAAOmB,QAAQC,KAAK,qDAItBpB,EAAWqB,YAAYf,MAIzB,MAAMS,EAAiBT,IACrBC,YAAM,uBAAwBD,GAC9BL,OAAOoB,YAAYf,EAASL,OAAOqB,SAASC,SAIxCN,EAAmB,KACvBjB,OAAakB,I,oGCzCR,MAAMM,EAA2C,c,YACM,I,EADN,e,EAAA,M,sFAG/CtB,iBAAiBG,EAAgBoB,GACtCC,KAAKC,UAAUtB,GAAUoB,EAGpBG,oBAAoBvB,GACzBqB,KAAKC,UAAUtB,QAAUa,EAIpBW,cAAcxB,EAAgByB,GACnC,MAAMC,EAAU,IAAKL,KAAKC,UAAW,CAACtB,QAASa,GAC/CxC,OAAOsD,OAAOD,GAASE,SAASC,GAAMA,GAAKA,EAAEJ,KAGxCK,mBACL,OAAOzD,OAAO0D,KAAKV,KAAKC,YCnBrB,MAAMpB,EAC2C,Q,oGCDjD,MAAMK,EAA8B,WAE9ByB,EAA8B","file":"content_script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 137);\n","import { ExchangeMessage, ExchangeSource } from \"@urql/devtools\";\nimport { ContentScriptConnectionName } from \"../types\";\nimport { debug } from \"../util\";\n\n/** Connection to background.js */\nlet connection: chrome.runtime.Port | undefined;\n\n// Listen for init message from exchange\nwindow.addEventListener(\"message\", ({ data, isTrusted }) => {\n  const exchangeSource: ExchangeSource = \"exchange\";\n\n  // Filter messages not from the exchange\n  if (!isTrusted || data?.source !== exchangeSource) {\n    return;\n  }\n\n  const message = data as ExchangeMessage;\n  debug(\"Exchange Message: \", data);\n\n  // Setup connection on init message\n  if (message.type === \"connection-init\") {\n    connection = chrome.runtime.connect({ name: ContentScriptConnectionName });\n    connection.onMessage.addListener(handleMessage);\n    connection.onDisconnect.addListener(handleDisconnect);\n  }\n\n  if (connection === undefined) {\n    return console.warn(\"Unable to send message to Urql Devtools extension\");\n  }\n\n  // Forward message to devtools\n  connection.postMessage(message);\n});\n\n/** Handle message from background script. */\nconst handleMessage = (message: ExchangeMessage) => {\n  debug(\"Background Message: \", message);\n  window.postMessage(message, window.location.origin);\n};\n\n/** Handle disconnect from background script. */\nconst handleDisconnect = () => {\n  connection = undefined;\n};\n","/** A shared EventTarget for dispatching messages to connected peers. */\nexport class BackgroundEventTarget<T extends any = any> {\n  private listeners: Record<string, Handler<T> | undefined> = {};\n\n  public addEventListener(source: string, callback: Handler<T>): void {\n    this.listeners[source] = callback;\n  }\n\n  public removeEventListener(source: string): void {\n    this.listeners[source] = undefined;\n  }\n\n  /** Dispatches event to all listeners excluding source */\n  public dispatchEvent(source: string, event: T): void {\n    const targets = { ...this.listeners, [source]: undefined };\n    Object.values(targets).forEach((f) => f && f(event));\n  }\n\n  public connectedSources(): string[] {\n    return Object.keys(this.listeners);\n  }\n}\n\ntype Handler<T> = (e: T) => void;\n","export const debug =\n  process.env.NODE_ENV !== \"production\" ? console.log : () => undefined;\n","export const ContentScriptConnectionName = \"exchange\" as const;\n\nexport const DevtoolsPanelConnectionName = \"devtools\" as const;\n"],"sourceRoot":""}